name: deco

on:
  workflow_call:

  workflow_dispatch:

  push:
    branches: [main]
    paths:
      - 'go/**'

  pull_request:
    paths:
      - '.github/workflows/deco.yml'
      - 'go/**'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout eng-dev-ecosystem
        uses: actions/checkout@v3

      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19.7
          cache: true
          cache-dependency-path: go/go.sum

      - name: Download dependencies
        shell: bash
        run: |
          # Try to download dependencies.
          # If this fails, we assume that the hashes listed in `go.sum` are out of date.
          # Run `go mod tidy` if so, to update `go.sum`.
          # Note: we can avoid this step by vendoring and committing all dependencies.
          if ! go mod download; then
            go mod tidy
            # Print changes made to `go.sum`.
            git diff || true
          fi
        working-directory: go

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v3
        with:
          version: latest
          args: release --snapshot --rm-dist
          workdir: go

      - name: Store binaries (if commit is on main branch)
        if: github.ref == 'refs/heads/main'
        uses: actions/upload-artifact@v3
        with:
          name: deco
          path: go/dist/deco_*/deco*

  test:
    needs: [build]

    runs-on: ubuntu-latest

    steps:
      - name: Checkout eng-dev-ecosystem
        uses: actions/checkout@v3

      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19.7
          cache: true
          cache-dependency-path: go/go.sum

      - name: Run go test
        shell: bash
        run: go test ./...
        working-directory: go

  fmt:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.19.7

          # No need to download cached dependencies when running gofmt.
          cache: false

      - name: Run gofmt
        run: |
          # -l: list files that were reformatted
          # -w: write back formatted files to disk
          gofmt -l -w ./go

      - name: Fail on differences
        run: |
          # Exit with status code 1 if there are differences (i.e. unformatted files)
          git diff --exit-code
