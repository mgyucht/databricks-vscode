name: vscode-nightly

on:
  workflow_dispatch:
    # manual workflow testing
    # https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#workflow_dispatch
  schedule:
    - cron: '0 6 * * *'

jobs:
  build-deco:
    name: "Build Deco CLI"
    uses: ./.github/workflows/build-deco.yml
    secrets: inherit

  js-sdk-integration-test:
    name: "JS SDK Integration test"
    needs: [build-deco]

    strategy: 
      fail-fast: false 
      matrix:
          environment: [azure-prod-pat]
          os: [macos-latest, windows-latest]
          node-version: [16.x]
          vscode-version: [stable, insiders]

    runs-on: ${{ matrix.os }}

    environment: ${{ matrix.environment }}
    env: 
      VSCODE_TEST_VERSION: ${{ matrix.vscode-version }}

    steps:
      - uses: actions/checkout@v3

      - name: Setup Deco CLI
        uses: ./.github/actions/setup-deco-cli

      - name: Expand actions environment secrets to variables
        run: deco env export --name ${{ matrix.environment }} --quote-values=false >> $GITHUB_ENV
        shell: bash
        env:
          GITHUB_SECRETS_JSON: '${{ toJson(secrets) }}'

      - run: cd ext && git clone https://${{ secrets.DECO_GITHUB_TOKEN }}:x-oauth-basic@github.com/databricks/databricks-vscode

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
            node-version: ${{ matrix.node-version }}
            cache: "yarn"
            cache-dependency-path: "ext/databricks-vscode/package.json"

      - run: yarn install --immutable
        working-directory: ext/databricks-vscode
      
      - name: Building packages
        run: yarn run build
        working-directory: ext/databricks-vscode

      - name: Integration Tests
        run: yarn workspace @databricks/databricks-sdk run test:integ
        working-directory: ext/databricks-vscode
            

  extension-integration-test:
    name: "Extension Integration test"
    needs: [js-sdk-integration-test]
    strategy: 
      fail-fast: false
      matrix:
          environment: [azure-prod-pat]
          os: [macos-latest, windows-latest]
          node-version: [16.x]
          vscode-version: [stable, insiders]

    runs-on: ${{ matrix.os }}

    environment: ${{ matrix.environment }}
    env: 
      VSCODE_TEST_VERSION: ${{ matrix.vscode-version }}

    steps:
      - uses: actions/checkout@v3

      - name: Setup Deco CLI
        uses: ./.github/actions/setup-deco-cli

      - name: Expand actions environment secrets to variables
        run: deco env export --name ${{ matrix.environment }} --quote-values=false >> $GITHUB_ENV
        shell: bash
        env:
          GITHUB_SECRETS_JSON: '${{ toJson(secrets) }}'

      - run: cd ext && git clone https://${{ secrets.DECO_GITHUB_TOKEN }}:x-oauth-basic@github.com/databricks/databricks-vscode

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
            node-version: ${{ matrix.node-version }}
            cache: "yarn"
            cache-dependency-path: "ext/databricks-vscode/package.json"

      - name: Integration Tests
        uses: nick-fields/retry@v2
        with:
            max_attempts: 3
            retry_wait_seconds: 2
            timeout_minutes: 10
            retry_on: any
            command: |
                cd ext/databricks-vscode
                yarn workspace databricks-vscode run test:integ:clean
                yarn install --immutable
                yarn build
                yarn workspace databricks-vscode run test:integ

      - name: Upload test logs
        if: always()
        continue-on-error: true
        uses: actions/upload-artifact@v3
        with:
            name: test-logs ${{ join(inputs.*, ' - ') }} - ${{ github.event_name }}
            path: ext/databricks-vscode/packages/databricks-vscode/src/test/logs

  slack-notify:
    name: "Post Slack notification"
    runs-on: ubuntu-latest

    needs: [js-sdk-integration-test, extension-integration-test, build-deco]
    if: always()

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Deco CLI
        uses: ./.github/actions/setup-deco-cli

      - name: Post Slack notification
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token
          deco slack post-action-status
        env:
          GITHUB_JOB_REGEXP: "^(JS SDK Integration test|Extension Integration test)"
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_CHANNEL: eng-dev-ecosystem-team
