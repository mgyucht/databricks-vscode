name: vscode-nightly

on:
  workflow_dispatch:
  # manual workflow testing
  # https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#workflow_dispatch
  schedule:
    - cron: "0 6 * * *"

jobs:
  build-deco:
    name: "Build Deco CLI"
    uses: ./.github/workflows/build-deco.yml
    secrets: inherit

  js-sdk-integration-test:
    name: "JS SDK Integration test"
    needs: [build-deco]

    strategy:
      fail-fast: false
      matrix:
        environment: [azure-prod-usr]
        os: [macos-latest, windows-latest]
        node-version: [16.x]
        vscode-version: [stable, insiders]

    runs-on: ${{ matrix.os }}

    environment: ${{ matrix.environment }}
    env:
      VSCODE_TEST_VERSION: ${{ matrix.vscode-version }}

    defaults:
      run:
        shell: bash

    steps:
      - uses: actions/checkout@v3

      - name: Setup Deco CLI
        uses: ./.github/actions/setup-deco-cli

      - name: Expand actions environment secrets to variables
        run: deco env export --name ${{ matrix.environment }} --quote-values=false >> $GITHUB_ENV
        shell: bash
        env:
          GITHUB_SECRETS_JSON: "${{ toJson(secrets) }}"

      - run: cd ext && git clone https://${{ secrets.DECO_GITHUB_TOKEN }}:x-oauth-basic@github.com/databricks/databricks-vscode

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "yarn"
          cache-dependency-path: "ext/databricks-vscode/package.json"

      - run: yarn install --immutable
        working-directory: ext/databricks-vscode

      - name: Building packages
        run: yarn run build
        working-directory: ext/databricks-vscode

      - name: Integration Tests
        run: |
          for i in {1..2}; do yarn run test:integ && exit 0 || echo "RETRYING....."; done
          exit 1
        working-directory: ext/databricks-vscode/packages/databricks-sdk-js

  extension-integration-test:
    name: "Extension Integration test"
    needs: [build-deco]

    strategy:
      fail-fast: false
      matrix:
        environment: [azure-prod-usr]
        arch:
          [
            { bricks_arch: darwin_amd64, os: macos-latest },
            { bricks_arch: windows_amd64, os: windows-latest },
          ]
        node-version: [16.x]
        vscode-version: [stable, insiders]

    runs-on: ${{ matrix.arch.os }}

    environment: ${{ matrix.environment }}
    env:
      VSCODE_TEST_VERSION: ${{ matrix.vscode-version }}
      BRICKS_ARCH: ${{ matrix.arch.bricks_arch }}

    defaults:
      run:
        shell: bash

    steps:
      - uses: actions/checkout@v3

      - name: Setup Deco CLI
        uses: ./.github/actions/setup-deco-cli

      - name: Expand actions environment secrets to variables
        run: deco env export --name ${{ matrix.environment }} --quote-values=false >> $GITHUB_ENV
        shell: bash
        env:
          GITHUB_SECRETS_JSON: "${{ toJson(secrets) }}"

      - run: cd ext && git clone https://${{ secrets.DECO_GITHUB_TOKEN }}:x-oauth-basic@github.com/databricks/databricks-vscode

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "yarn"
          cache-dependency-path: "ext/databricks-vscode/package.json"

      - name: Cache wdio
        uses: actions/cache@v3
        with:
          path: /tmp/wdio-vscode-service
          key: ${{ matrix.arch.os }}-${{ matrix.vscode-version }}-wdio

      - run: yarn install --immutable
        working-directory: ext/databricks-vscode

      - name: Fetching Bricks CLI
        run: yarn run package:cli:fetch
        working-directory: ext/databricks-vscode/packages/databricks-vscode
        env:
          # TODO: Remove this once the bricks repo is public
          GH_TOKEN: ${{ secrets.DECO_GITHUB_TOKEN }}

      - name: Building packages
        run: yarn run build
        working-directory: ext/databricks-vscode

      - name: Integration Tests
        run: |
          for i in {1..2}; do yarn run test:integ && exit 0 || echo "RETRYING....."; done
          exit 1
        working-directory: ext/databricks-vscode/packages/databricks-vscode

      - name: Upload test logs
        if: always()
        continue-on-error: true
        uses: actions/upload-artifact@v3
        with:
          name: test-logs ${{ join(matrix.arch.*, ' - ') }} - ${{matrix.vscode-version}} - ${{ github.event_name }}
          path: ext/databricks-vscode/packages/databricks-vscode/logs

  slack-notify:
    name: "Post Slack notification"
    runs-on: ubuntu-latest

    needs: [js-sdk-integration-test, extension-integration-test, build-deco]
    if: always()

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Deco CLI
        uses: ./.github/actions/setup-deco-cli

      - name: Post Slack notification
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token
          deco slack post-action-status
        env:
          GITHUB_JOB_REGEXP: "^(JS SDK Integration test|Extension Integration test)"
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_CHANNEL: eng-dev-ecosystem-team
