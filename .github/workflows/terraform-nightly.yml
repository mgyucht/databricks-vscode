name: terraform-nightly

on:
  workflow_dispatch:
    # manual workflow testing
    # https://docs.github.com/en/actions/using-workflows/events-that-trigger-workflows#workflow_dispatch
  schedule:
    - cron: '0 6 * * *'

jobs:
  integration-tests-prod:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        env:
          - azure-prod
          - gcp-prod
          - aws-prod
          - aws-prod-acct
          - aws-prod-ucws
          - aws-prod-ucacct
          - gcp-acct-prod
    environment: ${{ matrix.env }}

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Deco CLI
        uses: ./.github/actions/setup-deco-cli
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Checkout terraform-provider-databricks
        uses: actions/checkout@v3
        with:
          repository: databricks/terraform-provider-databricks
          path: ext/terraform-provider-databricks

      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.18.6
          cache: true
          cache-dependency-path: ext/terraform-provider-databricks/go.sum

      - name: Make vendor for Terraform Provider
        run: go mod vendor
        working-directory: ext/terraform-provider-databricks

      - name: Run tests
        run: deco env test all --name ${{ matrix.env }} --repo terraform-provider-databricks
        env:
          GITHUB_SECRETS_JSON: '${{ toJson(secrets) }}'

      - name: Archive logs
        if: always()
        uses: actions/upload-artifact@v1
        with:
          name: ${{ matrix.env }}-test.log
          path: test.log

  changelog:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Deco CLI
        uses: ./.github/actions/setup-deco-cli
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - run: deco gh release-notes -r terraform-provider-databricks --head master >> $GITHUB_STEP_SUMMARY
        env:
          GITHUB_TOKEN: ${{ secrets.DECO_GITHUB_TOKEN }}

  slack-notify:
    name: "Post Slack notification"
    runs-on: ubuntu-latest

    needs: [integration-tests-prod]
    if: always()

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Deco CLI
        uses: ./.github/actions/setup-deco-cli
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Post Slack notification
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token
          deco slack post-action-status
        env:
          GITHUB_JOB_REGEXP: "^integration-tests-prod"
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_CHANNEL: eng-dev-ecosystem-team

### Disabling completeness check before the bot user is added as reader to docs repo
  # completeness:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - run: cd ext && git clone https://${{ secrets.DECO_GITHUB_TOKEN }}:x-oauth-basic@github.com/databricks/docs
  #     - name: Checkout databricks-sdk-go
  #       uses: actions/checkout@v3
  #       with:
  #         repository: databricks/databricks-sdk-go
  #         token: ${{ secrets.DECO_GITHUB_TOKEN }}
  #         path: ext/databricks-sdk-go

  #     - name: Checkout terraform-provider-databricks
  #       uses: actions/checkout@v3
  #       with:
  #         repository: databricks/terraform-provider-databricks
  #         path: ext/terraform-provider-databricks

  #     - name: Setup Go
  #       uses: actions/setup-go@v3
  #       with:
  #         go-version: 1.18.6

  #     - run: go mod vendor
  #       working-directory: go

  #     - run: go run main.go tf cov >> $GITHUB_STEP_SUMMARY
  #       working-directory: go
